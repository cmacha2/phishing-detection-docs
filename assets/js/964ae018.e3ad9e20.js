"use strict";(self.webpackChunkphishing_detection_docs=self.webpackChunkphishing_detection_docs||[]).push([[443],{3588:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>a,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"api-reference","title":"API Reference","description":"PhishingDetector Class","source":"@site/docs/api-reference.md","sourceDirName":".","slug":"/api-reference","permalink":"/phishing-detection-docs/docs/api-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/cmacha2/phishing-detection-docs/tree/main/docs/docs/api-reference.md","tags":[],"version":"current","lastUpdatedBy":"cmacha2","lastUpdatedAt":1733070549000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Usage Guide","permalink":"/phishing-detection-docs/docs/usage"},"next":{"title":"Contributing Guide","permalink":"/phishing-detection-docs/docs/contributing"}}');var t=i(4848),r=i(8453);const c={},l="API Reference",d={},o=[{value:"<code>PhishingDetector</code> Class",id:"phishingdetector-class",level:2},{value:"Methods",id:"methods",level:3},{value:"<code>__init__(model_type: str = &#39;url&#39;)</code>",id:"__init__model_type-str--url",level:4},{value:"<code>predict(input_data: str) -&gt; List[Dict]</code>",id:"predictinput_data-str---listdict",level:4},{value:"<code>predict_proba(input_data: str) -&gt; Dict</code>",id:"predict_probainput_data-str---dict",level:4},{value:"<code>BatchProcessor</code> Class",id:"batchprocessor-class",level:2},{value:"Methods",id:"methods-1",level:3},{value:"<code>__init__(model_type: str = &#39;url&#39;)</code>",id:"__init__model_type-str--url-1",level:4},{value:"<code>process(inputs: List[str]) -&gt; List[Dict]</code>",id:"processinputs-liststr---listdict",level:4},{value:"<code>utils</code> Module",id:"utils-module",level:2},{value:"Functions",id:"functions",level:3},{value:"<code>load_config(config_path: str) -&gt; Dict</code>",id:"load_configconfig_path-str---dict",level:4},{value:"<code>log_message(message: str, level: str = &#39;info&#39;)</code>",id:"log_messagemessage-str-level-str--info",level:4}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"api-reference",children:"API Reference"})}),"\n",(0,t.jsxs)(n.h2,{id:"phishingdetector-class",children:[(0,t.jsx)(n.code,{children:"PhishingDetector"})," Class"]}),"\n",(0,t.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h4,{id:"__init__model_type-str--url",children:(0,t.jsx)(n.code,{children:"__init__(model_type: str = 'url')"})}),"\n",(0,t.jsx)(n.p,{children:"Initializes the phishing detector with the specified model type."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"model_type"})," (str): The type of model to use for detection. Options are:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'url'"})," for URL phishing detection."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"'email'"})," for email phishing detection."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"predictinput_data-str---listdict",children:(0,t.jsx)(n.code,{children:"predict(input_data: str) -> List[Dict]"})}),"\n",(0,t.jsx)(n.p,{children:"Predicts whether the given input data is phishing or legitimate."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"input_data"})," (str): The input URL or email text to classify."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),": A list of dictionaries, where each dictionary contains:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"input"})," (str): The original input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"label"})," (str): The classification result (",(0,t.jsx)(n.code,{children:"'phishing'"})," or ",(0,t.jsx)(n.code,{children:"'legitimate'"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"confidence"})," (float): The confidence score of the prediction."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"from phishing_detection_py import PhishingDetector\n\ndetector = PhishingDetector(model_type=\"url\")\nresult = detector.predict(\"http://example-phishing-site.com\")\nprint(result)\n# Output: [{'input': 'http://example-phishing-site.com', 'label': 'phishing', 'confidence': 0.98}]\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"predict_probainput_data-str---dict",children:(0,t.jsx)(n.code,{children:"predict_proba(input_data: str) -> Dict"})}),"\n",(0,t.jsxs)(n.p,{children:["Returns the probabilities for each class (",(0,t.jsx)(n.code,{children:"'phishing'"})," or ",(0,t.jsx)(n.code,{children:"'legitimate'"}),") for the given input."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"input_data"})," (str): The input URL or email text to classify."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),": A dictionary containing:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"input"})," (str): The original input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"probabilities"})," (Dict[str, float]): The probabilities for each class."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"result = detector.predict_proba(\"http://example-phishing-site.com\")\nprint(result)\n# Output: {'input': 'http://example-phishing-site.com', 'probabilities': {'phishing': 0.98, 'legitimate': 0.02}}\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"batchprocessor-class",children:[(0,t.jsx)(n.code,{children:"BatchProcessor"})," Class"]}),"\n",(0,t.jsx)(n.h3,{id:"methods-1",children:"Methods"}),"\n",(0,t.jsx)(n.h4,{id:"__init__model_type-str--url-1",children:(0,t.jsx)(n.code,{children:"__init__(model_type: str = 'url')"})}),"\n",(0,t.jsx)(n.p,{children:"Initializes the batch processor for handling multiple inputs."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"model_type"})," (str): The type of model to use for batch processing. Options are ",(0,t.jsx)(n.code,{children:"'url'"})," or ",(0,t.jsx)(n.code,{children:"'email'"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"processinputs-liststr---listdict",children:(0,t.jsx)(n.code,{children:"process(inputs: List[str]) -> List[Dict]"})}),"\n",(0,t.jsx)(n.p,{children:"Processes a batch of URLs or email texts and returns detection results for each input."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"inputs"})," (List[str]): A list of URLs or email texts to classify."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),": A list of dictionaries, each containing:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"input"})," (str): The original input."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"label"})," (str): The classification result."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"confidence"})," (float): The confidence score."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"batch_processor = BatchProcessor(model_type=\"url\")\ninputs = [\"http://phishing-url.com\", \"https://safe-url.org\"]\nresults = batch_processor.process(inputs)\nprint(results)\n# Output: [\n#   {'input': 'http://phishing-url.com', 'label': 'phishing', 'confidence': 0.98},\n#   {'input': 'https://safe-url.org', 'label': 'legitimate', 'confidence': 0.95}\n# ]\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h2,{id:"utils-module",children:[(0,t.jsx)(n.code,{children:"utils"})," Module"]}),"\n",(0,t.jsx)(n.h3,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h4,{id:"load_configconfig_path-str---dict",children:(0,t.jsx)(n.code,{children:"load_config(config_path: str) -> Dict"})}),"\n",(0,t.jsx)(n.p,{children:"Loads configuration from a YAML file."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"config_path"})," (str): Path to the YAML configuration file."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Returns"}),": A dictionary containing configuration data."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from phishing_detection_py.utils import load_config\n\nconfig = load_config("config.yaml")\nprint(config)\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"log_messagemessage-str-level-str--info",children:(0,t.jsx)(n.code,{children:"log_message(message: str, level: str = 'info')"})}),"\n",(0,t.jsx)(n.p,{children:"Logs messages at the specified level."}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Parameters"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"message"})," (str): The message to log."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"level"})," (str): The log level (",(0,t.jsx)(n.code,{children:"'info'"}),", ",(0,t.jsx)(n.code,{children:"'warning'"}),", ",(0,t.jsx)(n.code,{children:"'error'"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'from phishing_detection_py.utils import log_message\n\nlog_message("Phishing detection started", level="info")\n'})})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function c(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);